name: build

on:
  push:
    branches:
      - master
  pull_request:

env:
  TAG_PREFIX: emazzotta/lighthouse-badges

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Versions
        run: |
          echo "node: $(node -v)"
          echo "npm: $(npm -v)"
          echo "Docker: $(docker -v)"

      - name: NPM Build
        run: |
          npm install
          npm run lint
          npm run build

      - name: Login to DockerHub
        if: github.ref == 'refs/heads/master'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ env.TAG_PREFIX }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Unit & Integration Test
        run: npm run test

      - name: Install and Run Codecov Uploader
        run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov

      - name: Node System Test
        run: npm run system-test:light-run

      - name: Docker System Test
        run: npm run docker:system-test:run

      - name: Deploy to Github Registry
        if: github.ref == 'refs/heads/master'
        run: |
          package_name=$(jq -r '.name' package.json)
          current_version=$(jq -r '.version' package.json)
          npm config set registry https://npm.pkg.github.com
          npm config set //npm.pkg.github.com/:_authToken ${GITHUB_TOKEN}
          [[ "$(npm show ${package_name} version)" ==  "${current_version}" ]] && \
            echo "Current version ${current_version} already published" || \
            npm run ci:publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to npm.js Registry
        if: github.ref == 'refs/heads/master'
        run: |
          jq '.name="lighthouse-badges"' package.json > package.json.temp && mv -f package.json.temp package.json
          current_version=$(jq -r '.version' package.json)
          package_name=$(jq -r '.name' package.json)
          npm config set registry https://registry.npmjs.org
          npm config set //registry.npmjs.org/:_authToken ${NPM_AUTH_TOKEN}
          [[ "$(npm show ${package_name} version)" ==  "${current_version}" ]] && \
            echo "Current version ${current_version} already published" || \
            npm run ci:publish
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Set Environment Variables
        run: |
          echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Deploy to Dockerhub
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.TAG_PREFIX }}:${{ env.GIT_SHA }}
            ${{ env.TAG_PREFIX }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

